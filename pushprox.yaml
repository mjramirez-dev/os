package:
  name: pushprox
  version: "0.2.0"
  epoch: 0
  description: Proxy to allow Prometheus to scrape through NAT etc.
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/prometheus-community/PushProx.git
      tag: v${{package.version}}
      expected-commit: 83cae523a829b055f26f20baa2201dec67ab6f37

  - uses: go/build
    with:
      packages: ./cmd/proxy
      output: ${{package.name}}-proxy
      ldflags: |
        -X main.Version=${{package.version}}
        -extldflags '-static'

subpackages:
  - name: ${{package.name}}-client
    description: pushprox-client binary
    pipeline:
      - uses: go/build
        with:
          packages: ./cmd/client/main.go
          output: ${{package.name}}-client
          ldflags: |
            -X main.Version=${{package.version}}
            -extldflags '-static'

  - name: ${{package.name}}-compat
    description: Compat package for ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/app
          ln -sf /usr/bin/${{package.name}}-client "${{targets.contextdir}}"/app/${{package.name}}-client
          ln -sf /usr/bin/${{package.name}}-proxy "${{targets.contextdir}}"/app/${{package.name}}-proxy

update:
  enabled: true
  git:
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - ${{package.name}}-client
        - curl
        - jq
  pipeline:
    - name: "Basic Smoke Test"
    - runs: |
        pushprox-client --help
        pushprox-proxy --help
    - name: "Functional Test"
    - runs: |
        # Start proxy
        pushprox-proxy --log.level=debug &
        proxy_pid=$!
        sleep 2

        # Wait for proxy to be ready
        until curl -sf http://localhost:8080/clients; do
          echo "Waiting for proxy..."
          sleep 2
        done

        # Start client and connect to proxy
        pushprox-client --log.level=debug --proxy-url=http://localhost:8080 &
        client_pid=$!
        sleep 2

        # Wait for client to register
        attempt=0
        while [ "$attempt" -lt 10 ]; do
          connected=$(curl -sf http://localhost:8080/clients | jq 'length')
          if [ "$connected" = "1" ]; then
            echo "Client successfully registered with proxy."
            break
          fi
          echo "Waiting for client to appear in proxy..."
          attempt=$((attempt + 1))
          sleep 2
        done

        if [ "$connected" != "1" ]; then
          echo "Client did not register in time"
          exit 1
        fi

        # Cleanup processes
        kill $proxy_pid
        kill $client_pid
